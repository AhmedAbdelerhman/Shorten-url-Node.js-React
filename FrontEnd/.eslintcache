[{"H:\\React projects\\react project\\src\\index.js":"1","H:\\React projects\\react project\\src\\App.js":"2","H:\\React projects\\21-full stack chat app\\react project\\src\\index.js":"3","H:\\React projects\\21-full stack chat app\\react project\\src\\App.js":"4","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\SignUP.js":"5","H:\\React projects\\21-full stack chat app\\react project\\src\\Functions\\httpPostForm.js":"6","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\LogIn.js":"7","H:\\React projects\\21-full stack chat app\\react project\\src\\pages\\Form.js":"8","H:\\React projects\\21-full stack chat app\\react project\\src\\pages\\ChatPage.js":"9","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Chat.js":"10","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Aside.js":"11","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Model.js":"12","H:\\React projects\\21-full stack chat app\\react project\\src\\data\\data.js":"13","H:\\React projects\\21-full stack chat app\\react project\\src\\store\\ChatProvider.js":"14","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Ui\\Skeleton.js":"15","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\index.js":"16","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\App.js":"17","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\Form.js":"18","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\MainPage.js":"19","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\LogIn.js":"20","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\SignUP.js":"21","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\Functions\\httpPostForm.js":"22","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\store\\ChatProvider.js":"23","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\Profile.js":"24","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\post\\QuoteForm.js":"25","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\Ui\\Card.js":"26","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\Ui\\LoadingSpinner.js":"27","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\index.js":"28","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\App.js":"29","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\pages\\Form.js":"30","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\pages\\MainPage.js":"31","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\SignUP.js":"32","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\LogIn.js":"33","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\post\\QuoteForm.js":"34","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\Ui\\Card.js":"35","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\Ui\\LoadingSpinner.js":"36","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\Functions\\httpPostForm.js":"37","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\CardUrls.js":"38","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\UrlsDialog.js":"39"},{"size":167,"mtime":1652654198191,"results":"40","hashOfConfig":"41"},{"size":351,"mtime":1652655086304,"results":"42","hashOfConfig":"41"},{"size":339,"mtime":1653173215107,"results":"43","hashOfConfig":"44"},{"size":3166,"mtime":1653346587067,"results":"45","hashOfConfig":"44"},{"size":6510,"mtime":1653298807738,"results":"46","hashOfConfig":"44"},{"size":450,"mtime":1653298855478,"results":"47","hashOfConfig":"44"},{"size":4523,"mtime":1653308369709,"results":"48","hashOfConfig":"44"},{"size":315,"mtime":1653095239391,"results":"49","hashOfConfig":"44"},{"size":471,"mtime":1653158499408,"results":"50","hashOfConfig":"44"},{"size":3484,"mtime":1653173443242,"results":"51","hashOfConfig":"44"},{"size":5184,"mtime":1653386978146,"results":"52","hashOfConfig":"44"},{"size":4383,"mtime":1653348154275,"results":"53","hashOfConfig":"44"},{"size":2007,"mtime":1653127935784,"results":"54","hashOfConfig":"44"},{"size":991,"mtime":1653353559356,"results":"55","hashOfConfig":"44"},{"size":2334,"mtime":1653384819849,"results":"56","hashOfConfig":"44"},{"size":276,"mtime":1660105977915,"results":"57","hashOfConfig":"58"},{"size":1216,"mtime":1660105444641,"results":"59","hashOfConfig":"58"},{"size":277,"mtime":1660082340321,"results":"60","hashOfConfig":"58"},{"size":6903,"mtime":1660218024173,"results":"61","hashOfConfig":"58"},{"size":3936,"mtime":1660218121780,"results":"62","hashOfConfig":"58"},{"size":6205,"mtime":1660217989472,"results":"63","hashOfConfig":"58"},{"size":450,"mtime":1660218078874,"results":"64","hashOfConfig":"58"},{"size":991,"mtime":1654679479568,"results":"65","hashOfConfig":"58"},{"size":4564,"mtime":1660218024173,"results":"66","hashOfConfig":"58"},{"size":4106,"mtime":1660218302711,"results":"67","hashOfConfig":"58"},{"size":156,"mtime":1648226933000,"results":"68","hashOfConfig":"58"},{"size":167,"mtime":1648226933000,"results":"69","hashOfConfig":"58"},{"size":276,"mtime":1660105977915,"results":"70","hashOfConfig":"71"},{"size":1020,"mtime":1660562961853,"results":"72","hashOfConfig":"71"},{"size":277,"mtime":1660082340321,"results":"73","hashOfConfig":"71"},{"size":972,"mtime":1660564680937,"results":"74","hashOfConfig":"71"},{"size":6205,"mtime":1660217989472,"results":"75","hashOfConfig":"71"},{"size":3936,"mtime":1660218121780,"results":"76","hashOfConfig":"71"},{"size":4106,"mtime":1660218302711,"results":"77","hashOfConfig":"71"},{"size":156,"mtime":1648226933000,"results":"78","hashOfConfig":"71"},{"size":167,"mtime":1648226933000,"results":"79","hashOfConfig":"71"},{"size":450,"mtime":1660218078874,"results":"80","hashOfConfig":"71"},{"size":3002,"mtime":1660565275119,"results":"81","hashOfConfig":"71"},{"size":4004,"mtime":1660565216168,"results":"82","hashOfConfig":"71"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"192dlif",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"156zq9d",{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"xdav4d",{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"120"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},"f5lfu5",{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"147"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\React projects\\react project\\src\\index.js",[],"H:\\React projects\\react project\\src\\App.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\index.js",[],["171","172"],"H:\\React projects\\21-full stack chat app\\react project\\src\\App.js",["173"],"import React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport NightlightIcon from \"@mui/icons-material/Nightlight\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\n\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Alert,\n  Box,\n  IconButton,\n\n  Snackbar,\n  styled,\n} from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport Form from \"./pages/Form\";\nimport chats from \"./data/data\";\nimport ChatPage from \"./pages/ChatPage\";\nimport { ChatState } from \"./store/ChatProvider\";\n\nfunction App() {\n  //const [chats, setChats] = useState([]);\n  var currentColor = localStorage.getItem(\"displayTheme\") |false;\n  console.log(currentColor);\n\n  currentColor = typeof currentColor == \"number\" ? \"light\" : currentColor;\n\n  const [theme, setTheme] = useState(currentColor);\n\n  localStorage.setItem(\"displayTheme\", theme);\n  const {  snackBar, setSnackBar } = ChatState();\n\n  // useEffect(() => {\n  //   const fetchChats = async () => {\n  //     const response = await fetch(\"https://ahmed-shorten-api.herokuapp.com/api/chat\");\n  //     const { chats } = await response.json();\n  //     return chats;\n  //   };\n\n  //   fetchChats()\n  //     .then((chats) => {\n  //       setChats(chats);\n  //     })\n  //     .catch((e) => console.log(e));\n  // }, [chats]);\n\n  const ThemeTag = styled(\"div\")({\n    position: \"fixed\",\n    top: \"3%\",\n    left: \"3%\",\n  });\n\n  const MyBox = styled(Box)({\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n  });\n\n  const displayTheme = createTheme({\n    palette: {\n      mode: theme,\n    },\n  });\n\n  const styles = {\n    position: \"fixed\",\n    display: \"block\",\n    width: \"100% !important\",\n    top: \"0 !important\",\n    justifyContent: \"center\",\n  };\n\n\n  const handleClose  =() =>{\n    setSnackBar({open:false})\n  \n  }\n  return (\n    <ThemeProvider theme={displayTheme}>\n      <Snackbar\n        sx={styles}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        open={snackBar.open}\n        onClose={handleClose}\n        onClick={handleClose}\n        autoHideDuration={3000}\n      >\n        <Alert severity={snackBar.severity}>{snackBar.message}</Alert>\n      </Snackbar>\n      <MyBox bgcolor=\"background.default\" color={\"text.primary\"}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/home/login\" />\n          </Route>\n          <Route path=\"/home/login\" exact>\n            <Form theme={theme} signUp={false} />\n          </Route>\n          <Route path=\"/home/signup\" exact>\n            <Form theme={theme} signUp={true} />\n          </Route>\n\n          <Route path=\"/chat\">\n            <ChatPage theme={theme} chatArray={chats} />\n          </Route>\n        </Switch>\n        <ThemeTag>\n          <IconButton\n            onClick={() =>\n              theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\")\n            }\n            aria-label=\"\"\n          >\n            {theme === \"light\" ? <NightlightIcon /> : <LightModeIcon />}\n          </IconButton>\n        </ThemeTag>\n      </MyBox>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\SignUP.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\Functions\\httpPostForm.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\components\\LogIn.js",["174"],"import { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport httpPost from \"../Functions/httpPostForm\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { styled } from \"@mui/system\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../store/ChatProvider\";\r\n\r\nconst LogIn = (props) => {\r\n  const refEmailLogIn = useRef();\r\n  const refPasswordLogIn = useRef();\r\n\r\n  const history = useHistory();\r\n  const { setSnackBar } = ChatState();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\")) ;\r\n    if (userInfo) history.push(\"/chat\");\r\n  }, [history]);\r\n\r\n  const loginHandler = async (event) => {\r\n    event.preventDefault();\r\n    const email = refEmailLogIn.current.value;\r\n    const password = refPasswordLogIn.current.value;\r\n    let payLoad = { email, password };\r\n    try {\r\n      const  data  = await httpPost(payLoad, \"login\");\r\n      if (data.userData) {\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n        history.push(\"/chat\");\r\n      } else {\r\n        console.log(data.error);\r\n        setSnackBar({\r\n          open: true,\r\n          message: data.error.message,\r\n          severity: \"error\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const displayTheme = createTheme({\r\n    palette: {\r\n      mode: props.theme,\r\n    },\r\n  });\r\n\r\n  const MyAvatar = styled(Avatar)({\r\n    height: \"80px\",\r\n    width: \"80px\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <ThemeProvider theme={displayTheme}>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <Box\r\n            sx={{\r\n              marginTop: 8,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <MyAvatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n              <LockOutlinedIcon />\r\n            </MyAvatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Log In\r\n            </Typography>\r\n            <Box\r\n              component=\"form\"\r\n              onSubmit={loginHandler}\r\n              noValidate\r\n              sx={{ mt: 1 }}\r\n            >\r\n              <TextField\r\n                inputRef={refEmailLogIn}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                inputRef={refPasswordLogIn}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                Log In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link variant=\"body2\">Forgot password?</Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <NavLink to=\"/home/signup\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </NavLink>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default LogIn;\r\n","H:\\React projects\\21-full stack chat app\\react project\\src\\pages\\Form.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\pages\\ChatPage.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Chat.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Aside.js",["175","176","177","178","179"],"H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Model.js",["180","181","182","183","184","185"],"import {\r\n  Autocomplete,\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  CardHeader,\r\n  FilledInput,\r\n  IconButton,\r\n  InputAdornment,\r\n  Modal,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\r\nimport { Fragment, useRef, useState } from \"react\";\r\nimport { Search, Visibility } from \"@mui/icons-material\";\r\nimport Skeleton from \"./Ui/Skeleton\";\r\nimport axios from \"axios\";\r\nconst Model = (props) => {\r\n  const [IsOpen, setIsOpen] = useState(false);\r\n\r\n  const [searchedUsers, setSearchedUsers] = useState([]);\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const searchRef = useRef();\r\n\r\n  const handleOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const style = {\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \" 40%\",\r\n    height: \"60%\",\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    : { userData: \"\" };\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${user.userData.token}`,\r\n    },\r\n  };\r\n\r\n  const searchHandler = async () => {\r\n    let searchValue = searchRef.current.value;\r\n    console.log(searchValue);\r\n    setisLoading(true);\r\n    const response = await fetch(\r\n      `https://ahmed-shorten-api.herokuapp.com/api/user?search=${searchValue}`,\r\n      config\r\n    );\r\n    try {\r\n      const users = await response.json();\r\n      setSearchedUsers(users);\r\n      console.log(users);\r\n      setisLoading(false);\r\n    } catch (error) {\r\n      setisLoading(false);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Button\r\n          onClick={handleOpen}\r\n          variant=\"contained\"\r\n          endIcon={<GroupAddIcon />}\r\n        >\r\n          Add Group\r\n        </Button>\r\n        <Modal\r\n          open={IsOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Typography\r\n              textAlign={\"center\"}\r\n              id=\"modal-modal-title\"\r\n              variant=\"h6\"\r\n              component=\"h2\"\r\n            >\r\n              Text in a modal\r\n            </Typography>\r\n\r\n            <FilledInput\r\n              sx={{ width: \"100% !important\", margin: \"auto !important\" }}\r\n              id=\"filled-adornment-password\"\r\n              type=\"text\"\r\n              inputRef={searchRef}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={searchHandler}\r\n                    aria-label=\"toggle password visibility\"\r\n                    edge=\"end\"\r\n                  >\r\n                    <Search />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n            <Box sx={{ height: \"70%\", overflowY: \"scroll\" }}>\r\n              {searchedUsers.map((user) => {\r\n                return (\r\n                  <Skeleton\r\n                    name={user.name}\r\n                    email={user.email}\r\n                    pic={user.pic}\r\n                    isLoading={isLoading}\r\n                   id={user._id}\r\n                  />\r\n                );\r\n              })}\r\n              {isLoading && (\r\n                <div>\r\n                  <Skeleton isLoading={true} />\r\n                  <Skeleton isLoading={true} />\r\n                  <Skeleton isLoading={true} />\r\n                </div>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Model;\r\n\r\n/*\r\n\r\n     <Autocomplete\r\n              sx={{\r\n                display: \"block\",\r\n                width: \"80% !important\",\r\n                margin: \"auto\",\r\n                position: \"absolute\",\r\n              }}\r\n              id=\"combo-box-demo\"\r\n              options={chats}\r\n              getOptionLabel={(option) => option.name}\r\n              style={{ width: 300 }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n\r\n\r\n*/\r\n","H:\\React projects\\21-full stack chat app\\react project\\src\\data\\data.js",[],"H:\\React projects\\21-full stack chat app\\react project\\src\\store\\ChatProvider.js",["186"],"import { createContext, useCallback, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [statusCode, setStatusCode] = useState();\r\n  const [snackBar, setSnackBar] = useState({\r\n    open: false,\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const [allUsers, setAllUsers] = useState();\r\n  const [myChats, setMyChats] = useState([]);\r\n\r\n  const history = useHistory();\r\n  let user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  if (!user) history.push(\"/\");\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        allUsers,\r\n        setAllUsers,\r\n        statusCode,\r\n        setStatusCode,\r\n        snackBar,\r\n        setSnackBar,\r\n        myChats,\r\n         setMyChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","H:\\React projects\\21-full stack chat app\\react project\\src\\components\\Ui\\Skeleton.js",[],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\index.js",[],["187","188"],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\App.js",["189","190","191","192"],"import React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\n\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Box,\n\n  styled,\n} from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport Form from \"./pages/Form\";\nimport MainPage from \"./pages/MainPage\";\nimport Profile from \"./pages/Profile\";\n\nfunction App() {\n\n\n  const ThemeTag = styled(\"div\")({\n    position: \"fixed\",\n    top: \"3%\",\n    left: \"3%\",\n  });\n\n  const MyBox = styled(Box)({\n\n  });\n\n\n  return (\n\n      <MyBox bgcolor=\"background.default\" color={\"text.primary\"}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/home/login\" />\n          </Route>\n          <Route path=\"/home/login\" exact>\n            <Form  signUp={false} />\n          </Route>\n          <Route path=\"/home/signup\" exact>\n            <Form signUp={true} />\n          </Route>\n\n          <Route path=\"/main\">\n            <MainPage  />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile  />\n          </Route>\n        </Switch>\n        <ThemeTag>\n    \n        </ThemeTag>\n      </MyBox>\n  );\n}\n\nexport default App;\n","H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\Form.js",[],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\MainPage.js",["193"],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\LogIn.js",[],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\SignUP.js",["194","195","196"],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\Functions\\httpPostForm.js",[],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\store\\ChatProvider.js",["197"],["198","199"],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\pages\\Profile.js",["200","201"],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\post\\QuoteForm.js",["202"],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\Ui\\Card.js",[],"H:\\node.js\\nodejs\\task StorexWeb\\front-end\\src\\components\\Ui\\LoadingSpinner.js",[],"H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\index.js",[],["203","204"],"H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\App.js",[],"H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\pages\\Form.js",[],"H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\pages\\MainPage.js",[],"H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\SignUP.js",["205","206","207"],"import React, { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n\r\n\r\n\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { CircularProgress, styled } from \"@mui/material\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport httpPost from \"../Functions/httpPostForm\";\r\n\r\nconst SignUP = (props) => {\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isUploadPicture, setUploadPicture] = useState(false);\r\n\r\n  const [pic, setPic] = useState(null);\r\n  const refEmailSignUp = useRef();\r\n  const passwordSignUp = useRef();\r\n  const nameSignup = useRef();\r\n\r\n  const upLoadPhoto = (pics) => {\r\n    setUploadPicture(true);\r\n    if (pics === undefined) {\r\n      return;\r\n    }\r\n    console.log(pics);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"cloud_name\", \"dgrbwggrg\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dgrbwggrg/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setUploadPicture(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setUploadPicture(false);\r\n        });\r\n    } else {\r\n      setUploadPicture(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const signUpHandler = async (event) => {\r\n    event.preventDefault();\r\n    const email = refEmailSignUp.current.value;\r\n    const password = passwordSignUp.current.value;\r\n    const name = nameSignup.current.value;\r\n    let payLoad = { name, email, password, pic };\r\n    console.log();\r\n    if (\r\n      email.trim().length <= 0 ||\r\n      password.trim().length <= 0 ||\r\n      name.trim().length <= 0\r\n    ) {\r\n \r\n\r\n      return;\r\n    }\r\n    if (!pic) {\r\n      payLoad = { name, email, password };\r\n    }\r\n\r\n    setIsLoading(true);\r\n    const data = await httpPost(payLoad, \"signup\");\r\n    if (data.userData) {\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      history.push(\"/main\")\r\n    } else {\r\n      console.log(data.error);\r\n    \r\n    }\r\n  };\r\n\r\n  const MyAvatar = styled(Avatar)({\r\n    height: \"80px\",\r\n    width: \"80px\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n  });\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: props.theme,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <MyAvatar src={pic} sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            {isUploadPicture ? <CircularProgress /> : <LockOutlinedIcon />}\r\n          </MyAvatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={signUpHandler} sx={{ mt: 1 }}>\r\n            <TextField\r\n              inputRef={nameSignup}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"text\"\r\n              label=\"Your Name\"\r\n              name=\"text\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n\r\n            <TextField\r\n              inputRef={refEmailSignUp}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"email\"\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n            />\r\n\r\n            <TextField\r\n              inputRef={passwordSignUp}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              pattern=\".{8,}\"\r\n              title=\"8 characters minimum\"\r\n              inputProps={{\r\n                pattern: \".{8,}\",\r\n                title: \"8 characters minimum\",\r\n              }}\r\n              onInvalid={() => {\r\n                console.log(\"hi\");\r\n              }}\r\n              autoComplete=\"current-password\"\r\n            />\r\n\r\n\r\n            <Button variant=\"contained\" component=\"label\">\r\n              Upload File\r\n              <input\r\n                type=\"file\"\r\n                hidden\r\n                accept=\"image/*\"\r\n                onChange={(e) => upLoadPhoto(e.target.files[0])}\r\n              />\r\n            </Button>\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              {isLoading ? <CircularProgress /> : \"Sign Up\"}\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n        \r\n              </Grid>\r\n              <Grid>\r\n                <NavLink color={\"text.primary\"} to=\"/home/login\">\r\n                  Already have an account? Log In\r\n                </NavLink>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default SignUP;\r\n","H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\LogIn.js",[],"H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\post\\QuoteForm.js",["208"],"H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\Ui\\Card.js",[],"H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\Ui\\LoadingSpinner.js",[],"H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\Functions\\httpPostForm.js",[],"H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\CardUrls.js",[],"H:\\node.js\\nodejs\\task appgain\\FrontEnd\\src\\components\\UrlsDialog.js",["209","210","211"],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"220","line":1,"column":39,"nodeType":"218","messageId":"219","endLine":1,"endColumn":47},{"ruleId":"216","severity":1,"message":"221","line":4,"column":3,"nodeType":"218","messageId":"219","endLine":4,"endColumn":13},{"ruleId":"216","severity":1,"message":"222","line":11,"column":8,"nodeType":"218","messageId":"219","endLine":11,"endColumn":16},{"ruleId":"216","severity":1,"message":"223","line":25,"column":11,"nodeType":"218","messageId":"219","endLine":25,"endColumn":18},{"ruleId":"216","severity":1,"message":"224","line":25,"column":20,"nodeType":"218","messageId":"219","endLine":25,"endColumn":30},{"ruleId":"216","severity":1,"message":"225","line":26,"column":9,"nodeType":"218","messageId":"219","endLine":26,"endColumn":14},{"ruleId":"216","severity":1,"message":"226","line":2,"column":3,"nodeType":"218","messageId":"219","endLine":2,"endColumn":15},{"ruleId":"216","severity":1,"message":"227","line":3,"column":3,"nodeType":"218","messageId":"219","endLine":3,"endColumn":9},{"ruleId":"216","severity":1,"message":"228","line":6,"column":3,"nodeType":"218","messageId":"219","endLine":6,"endColumn":13},{"ruleId":"216","severity":1,"message":"229","line":11,"column":3,"nodeType":"218","messageId":"219","endLine":11,"endColumn":12},{"ruleId":"216","severity":1,"message":"230","line":16,"column":18,"nodeType":"218","messageId":"219","endLine":16,"endColumn":28},{"ruleId":"216","severity":1,"message":"231","line":18,"column":8,"nodeType":"218","messageId":"219","endLine":18,"endColumn":13},{"ruleId":"216","severity":1,"message":"232","line":1,"column":25,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"212","replacedBy":"233"},{"ruleId":"214","replacedBy":"234"},{"ruleId":"216","severity":1,"message":"217","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"220","line":1,"column":28,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"235","line":11,"column":10,"nodeType":"218","messageId":"219","endLine":11,"endColumn":21},{"ruleId":"216","severity":1,"message":"236","line":11,"column":23,"nodeType":"218","messageId":"219","endLine":11,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":67,"column":6,"nodeType":"239","endLine":67,"endColumn":17,"suggestions":"240"},{"ruleId":"216","severity":1,"message":"241","line":8,"column":10,"nodeType":"218","messageId":"219","endLine":8,"endColumn":20},{"ruleId":"216","severity":1,"message":"242","line":9,"column":10,"nodeType":"218","messageId":"219","endLine":9,"endColumn":30},{"ruleId":"216","severity":1,"message":"243","line":13,"column":8,"nodeType":"218","messageId":"219","endLine":13,"endColumn":12},{"ruleId":"216","severity":1,"message":"232","line":1,"column":25,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"212","replacedBy":"244"},{"ruleId":"214","replacedBy":"245"},{"ruleId":"216","severity":1,"message":"246","line":6,"column":10,"nodeType":"218","messageId":"219","endLine":6,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":81,"column":6,"nodeType":"239","endLine":81,"endColumn":8,"suggestions":"247"},{"ruleId":"216","severity":1,"message":"248","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":16},{"ruleId":"212","replacedBy":"249"},{"ruleId":"214","replacedBy":"250"},{"ruleId":"216","severity":1,"message":"241","line":8,"column":10,"nodeType":"218","messageId":"219","endLine":8,"endColumn":20},{"ruleId":"216","severity":1,"message":"242","line":9,"column":10,"nodeType":"218","messageId":"219","endLine":9,"endColumn":30},{"ruleId":"216","severity":1,"message":"243","line":13,"column":8,"nodeType":"218","messageId":"219","endLine":13,"endColumn":12},{"ruleId":"216","severity":1,"message":"248","line":2,"column":10,"nodeType":"218","messageId":"219","endLine":2,"endColumn":16},{"ruleId":"216","severity":1,"message":"251","line":10,"column":3,"nodeType":"218","messageId":"219","endLine":10,"endColumn":20},{"ruleId":"216","severity":1,"message":"252","line":27,"column":10,"nodeType":"218","messageId":"219","endLine":27,"endColumn":14},{"ruleId":"216","severity":1,"message":"253","line":27,"column":16,"nodeType":"218","messageId":"219","endLine":27,"endColumn":23},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useContext' is defined but never used.","'SendIcon' is defined but never used.","'myChats' is assigned a value but never used.","'setMyChats' is assigned a value but never used.","'chats' is assigned a value but never used.","'Autocomplete' is defined but never used.","'Avatar' is defined but never used.","'CardHeader' is defined but never used.","'TextField' is defined but never used.","'Visibility' is defined but never used.","'axios' is defined but never used.","'useCallback' is defined but never used.",["254"],["255"],"'createTheme' is defined but never used.","'ThemeProvider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.","ArrayExpression",["256"],"'DatePicker' is defined but never used.","'LocalizationProvider' is defined but never used.","'Link' is defined but never used.",["254"],["255"],"'dataResponse' is assigned a value but never used.",["257"],"'Prompt' is defined but never used.",["254"],["255"],"'DialogContentText' is defined but never used.","'gurl' is assigned a value but never used.","'setGurl' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [InitValue, config]",{"range":"262","text":"263"},"Update the dependencies array to be: [config]",{"range":"264","text":"265"},[1960,1971],"[InitValue, config]",[2000,2002],"[config]"]